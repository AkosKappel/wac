services:
    frontend:
        build:
            context: ./wac-ufe
            dockerfile: build/docker/Dockerfile
        ports:
            - "8083:8080"
        environment:
            - CSP_HEADER=false
        depends_on:
            - backend
    
    backend:
        build:
            context: ./wac-api
            dockerfile: build/docker/Dockerfile
        ports:
            - "8084:8080"
        environment:
            AMBULANCE_API_ENVIRONMENT: ${AMBULANCE_API_ENVIRONMENT}
            AMBULANCE_API_PORT: ${AMBULANCE_API_PORT}
            AMBULANCE_API_MONGODB_HOST: ${AMBULANCE_API_MONGODB_HOST}
            AMBULANCE_API_MONGODB_PORT: ${AMBULANCE_API_MONGODB_PORT}
            AMBULANCE_API_MONGODB_DATABASE: ${AMBULANCE_API_MONGODB_DATABASE}
            AMBULANCE_API_MONGODB_COLLECTION: ${AMBULANCE_API_MONGODB_COLLECTION}
            AMBULANCE_API_MONGODB_USERNAME: ${AMBULANCE_API_MONGODB_USERNAME}
            AMBULANCE_API_MONGODB_PASSWORD: ${AMBULANCE_API_MONGODB_PASSWORD}
            AMBULANCE_API_MONGODB_TIMEOUT_SECONDS: ${AMBULANCE_API_MONGODB_TIMEOUT_SECONDS}
        depends_on:
            - mongo_db

    mongo_db:
        image: mongo:7.0
        container_name: mongo_db
        restart: always
        ports:
            - 27017:27017
        volumes:
            - db_data:/data/db
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${AMBULANCE_API_MONGODB_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${AMBULANCE_API_MONGODB_PASSWORD}

    mongo_express:
        image: mongo-express
        container_name: mongo_express
        restart: always
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${AMBULANCE_API_MONGODB_USERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${AMBULANCE_API_MONGODB_PASSWORD}
            ME_CONFIG_MONGODB_SERVER: mongo_db
            ME_CONFIG_BASICAUTH_USERNAME: mexpress
            ME_CONFIG_BASICAUTH_PASSWORD: mexpress
        links:
            - mongo_db

volumes:
    db_data: {}
